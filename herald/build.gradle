plugins {
    id 'maven-publish'
}

group = 'io.heraldprox.herald'
version = '2.0.0-beta1'

apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 2
        versionName "2.0.0-beta1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.json:json:20201115"
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'io.heraldprox.herald'
                artifactId = 'herald'
                pom {
                    name = 'Herald'
                    description = 'Reliable consumer device Bluetooth library'
                    url = 'https://heraldprox.io/'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'adamfowleruk'
                            name = 'Adam Fowler'
                            email = 'adam@adamfowler.org'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/theheraldproject/herald-for-android.git'
                        developerConnection = 'scm:git:ssh://github.com/theheraldproject/herald-for-android.git'
                        url = 'https://heraldprox.io/'
                    }
                }
            }
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = 'io.heraldprox.herald'
                artifactId = 'herald-debug'
                pom {
                    name = 'Herald'
                    description = 'Reliable consumer device Bluetooth library'
                    url = 'https://heraldprox.io/'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'adamfowleruk'
                            name = 'Adam Fowler'
                            email = 'adam@adamfowler.org'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/theheraldproject/herald-for-android.git'
                        developerConnection = 'scm:git:ssh://github.com/theheraldproject/herald-for-android.git'
                        url = 'https://heraldprox.io/'
                    }
                }
            }
        }

        repositories {
            maven {
                name = 'myRepo'
                url = "file://${buildDir}/repo"
                // def releasesRepoUrl = "https://oss.sonatype.org/content/repositories/releases/"
                // def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                // url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

task javadoc(type: Javadoc) {

    doFirst {
        configurations.implementation
                .filter { it.name.endsWith('.aar') }
        .each { aar ->
            copy {
                from zipTree(aar)
                include "**/classes.jar"
                into "$buildDir/tmp/aarsToJars/${aar.name.replace('.aar', '')}/"
            }
        }
    }

    configurations.implementation.setCanBeResolved(true)
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.implementation
    classpath += fileTree(dir: "$buildDir/tmp/aarsToJars/")
    destinationDir = file("${project.buildDir}/outputs/javadoc/")
    failOnError false
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}
